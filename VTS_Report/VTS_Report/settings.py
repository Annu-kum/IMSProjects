"""
Django settings for VTS_Report project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""


from pathlib import Path
import os
from environ import Env



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
env = Env()
env.read_env()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$8&g$)*ty)#df5)cm)u6^nwd+$xo19_ey@=b6z8cr!rodj8qhx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'rest_framework.authtoken',
    'djoser',
    'account',
    'Dealer',
    'MillersEntry',
    'Installation',
    'Deactivation',
    'Reactivation',
    'OtrDetails',
    'OTREntry',
    'MasterReport',
    'import_export',
    'storages',
]

CORS_ALLOW_ALL_ORIGINS = True  # For development purposes only. Use specific origins in production.
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
]
CORS_ALLOW_HEADERS = [
    'authorization',
    'content-type',
    'x-csrftoken',
    'Access-Control-Allow-Origin',
]

CORS_EXPOSE_HEADERS = [
    'Access-Control-Allow-Origin',
    'Access-Control-Allow-Credentials',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'VTS_Report.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'frontend/vtsfrontend/build')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'VTS_Report.wsgi.application'

# Database
DATABASES = {
    'default': {
         'ENGINE': 'django.db.backends.mysql',  
        'NAME': 'imsDatabase',  
        'USER': 'imsuser',  
        'PASSWORD': 'Annu@122#',  
        'HOST': '127.0.0.1',  
        'PORT': '3306',  
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Kolkata'  # Adjust according to your timezone preference
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [os.path.join(BASE_DIR, '/GPS_Report/frontend/vtsfrontend/build/static')]

# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAdminUser',
        # 'rest_framework.permissions.AllowAny',  # Uncomment this line if you need open access
    ),
    'DEFAULT_RENDERER_CLASSES':('rest_framework.renderers.JSONRenderer',),
    'DATE_INPUT_FORMATS': ["%d-%m-%Y", "%Y-%m-%d"],
    'DATE_FORMAT': '%Y-%m-%d',
}

# STORAGES configuration
STORAGES = {
         "default": {
             "BACKEND": env("DEFAULT_FILE_STORAGE"),
             "OPTIONS": {
                 "access_key": env("AWS_ACCESS_KEY_ID"),
                 "secret_key": env("AWS_SECRET_ACCESS_KEY"),
                 "bucket_name": env("AWS_STORAGE_BUCKET_NAME"),
                 "region_name": env("AWS_S3_REGION_NAME"),
                 "file_overwrite": env.bool("AWS_S3_FILE_OVERWRITE", default=True),
                 "default_acl": None,
                 "verify": env.bool("AWS_S3_VERIFY", default=True),
                 "custom_domain": env("AWS_S3_CUSTOM_DOMAIN", default=None),
             }
         },
         "staticfiles": {
             "BACKEND": env("DEFAULT_FILE_STORAGE"),
             "OPTIONS": {
                 "access_key": env("AWS_ACCESS_KEY_ID"),
                 "secret_key": env("AWS_SECRET_ACCESS_KEY"),
                 "bucket_name": env("AWS_STORAGE_BUCKET_NAME"),
                 "region_name": env("AWS_S3_REGION_NAME"),
                 "custom_domain": env("AWS_S3_CUSTOM_DOMAIN", default=None),
             },
         },
     }
            
    
# URL settings
custom_domain = env("AWS_S3_CUSTOM_DOMAIN")
MEDIA_URL = f'https://{custom_domain}/' if custom_domain else '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Optionally, for static files:
# STATIC_URL = f'https://{custom_domain}/static/'



AUTH_USER_MODEL = "account.User"
